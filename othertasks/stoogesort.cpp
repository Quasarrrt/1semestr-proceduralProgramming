// stoogesort.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include<iostream>
#include<ctime>
#include<cstdlib>
using namespace std;
void stoogesort(int arr[], int l, int h)//функция для сортировки
{
    if (l >= h)//если у нас меньше 3 элементов в массиве и правое(последнее число) больше левого(первого) или просто 1 элемент, то возвращаем массив
        return;
    if (arr[l] > arr[h])//если первый элеменет меньше последнего, то переставляем их местами
        swap(arr[l], arr[h]);
    if (h - l + 1 > 2) {//если больше 2 элементов в массиве
        int t = (h - l + 1) / 3;
        stoogesort(arr, l, h - t);// вызываем рекурсию для первой 2/3 массива
        stoogesort(arr, l + t, h);//вызываем рекурсию для последней 2/3 массива
        stoogesort(arr, l, h - t);//еще раз вызываем рекурсию для первых 2/3 массива для проверки
    }
}

int main()
{
    setlocale(LC_ALL, "Russian");
	int n, i,*arr;
    cout << "Введите число элементов в массиве: " << endl;
	cin >> n;
	arr=new int[n];
    int choice;
    cout << "Напишите 1, если руками хотите ввести, 2-если рандомно заполнить его: " << endl;
    cin >> choice;
    if (choice == 1) {//руками
        cout << "Введите массив: " << endl;
        for (i = 0; i < n; i++)//заполняем массив
            cin >> arr[i];
    }
    else if(choice==2) {//рандомно
        srand(time(0));
        for (i = 0; i < n; i++)//заполняем массив
            arr[i]=1+rand()%100;
        cout << "Рандомный массив: " << endl;
        for (i = 0; i < n; i++)
            cout << arr[i] <<endl;
    }
    else {
        cout << "Error";
        exit(0);
    }
	stoogesort(arr, 0, n - 1);//сортируем
	cout << "Отсортированный массив: "<<endl;
	for (i = 0; i < n; i++)//выводим отсортированный
		cout<< arr[i]<<endl;
	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
