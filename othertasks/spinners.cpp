// сopy.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
*********** Спиннеры 1 задача * ****************

#include <iostream>
using namespace std;
int main()
{
    setlocale(LC_ALL, "Russian");
    int a, b, c, n;
    cin >> a >> b >> c;
    cout << (c - a) / b;
}
***********Спиннеры 2 задача * ****************

#include <iostream>
using namespace std;
int main()
{
    setlocale(LC_ALL, "Russian");
    int m;
    int ans3;
    int ans4;
    cin >> m;
    ans3 = (m - 4 * (m % 3)) / 3;// если m/3 нацело, то только будут трехлопастные,если нет, то остаток от деления=количество четырехлопастных
    ans4 = m % 3;
    if (ans3 >= 0) {
        cout << ans3 << endl << ans4 << endl;
    }
    else {//если m не составляется из 3 и 4 лопастных, то выводим 0 0
        ans3 = 0;
        ans4 = 0;
        cout << ans3 << endl << ans4 << endl;
    }
}
***********Спиннеры 3 задача * ****************

#include <iostream>
using namespace std;
int main()
{
    setlocale(LC_ALL, "Russian");
    int n, m;
    cin >> n >> m;
    int ans;
    ans = ((n * (n + 1)) / 2) * ((m * (m + 1)) / 2);
    /*просто считаем сумму членов арифметической прогресси сначала для n строк,потом для m cтолбцов, получаем сколько прямоугольников, которые только в строке стоят или только в столбце
     но т.к нас интересуют и прямоугольники, которые одновременно находят и в строках и столбцах, например 3x1 или 2x2, то нам надо просто перемножить две суммы*/
    cout << ans;
}
***********Спиннеры 4 задача * ****************
#include <iostream>
#include <math.h>
using namespace std;


int main()
{
    setlocale(LC_ALL, "Russian");
    int kupe[9] = { 0,0,0,0,0,0,0,0,0 };//создаем массив для купе, всего 9 купе в поезде
    int n, m;
    cin >> n;
    for (int i = 0; i < n; i++)//заполняем массив купе, по номеру введенного места, мы понимаем в каком купе оно находится и записываем, что там есть свободное место
    {
        cin >> m;
        if (m >= 1 & m <= 4 || m == 53 || m == 54)
        {
            kupe[0]++;
        }
        if (m >= 5 & m <= 8 || m == 51 || m == 52)
        {
            kupe[1]++;
        }
        if (m >= 9 & m <= 12 || m == 49 || m == 50)
        {
            kupe[2]++;
        }
        if (m >= 13 & m <= 16 || m == 47 || m == 48)
        {
            kupe[3]++;
        }
        if (m >= 17 & m <= 20 || m == 45 || m == 46)
        {
            kupe[4]++;
        }
        if (m >= 21 & m <= 24 || m == 43 || m == 44)
        {
            kupe[5]++;
        }

        if (m >= 25 & m <= 28 || m == 41 || m == 42)
        {
            kupe[6]++;
        }
        if (m >= 29 & m <= 32 || m == 39 || m == 40)
        {
            kupe[7]++;
        }
        if (m >= 33 & m <= 36 || m == 37 || m == 38)
        {
            kupe[8]++;
        }
    }
    int count = 0, max = 0;
    for (int i = 0; i < 9; i++)/*бежим по массиву купе
    и если какой-то элемент массива равен 6-значит в нем все места свободны, увеличиваем count на 1, если нигде нет свободных мест, тогда оставляем max=0, т.е свободных купе нет*/
    {
        if (kupe[i] == 6)
        {
            count++;
        }
        else
        {
            if (count > max)
            {
                max = count;
            }
            count = 0;
        }
    }
    cout << max;
}

***********Спиннеры 5 задача * ****************
#include <iostream>
using namespace std;
int main()
{
    setlocale(LC_ALL, "Russian");
    int n, k;
    cin >> n >> k;
    while (k != 1) {//n отвечает за места, длину ряда, k за количество отрезков, которое будет
        n = (n - k % 2) / 2;//длина ряда сокращается в два раза, т.к. каждый садится в середину ряда, а потом в середину отрезков образовавщихся после каждого следующего школьника, а количество участков увеличмвается в 2 раза
        k /= 2;
    }
    cout << (n - 1) / 2 << endl << n / 2;//т.к нам нам надо в порядке неубывания выводить, то выводим сначала наименьшее число, потом наибольшее(если они не равны)
}
}// напечатали эту строку

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
